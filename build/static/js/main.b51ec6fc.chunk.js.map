{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["TodoItem","todo","toggleTodo","id","task","completed","href","className","onClick","TodoList","todos","map","KEY","App","useState","setTodos","todoTaskRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","ref","type","placeholder","current","value","prevTodos","uuidv4","newTodos","filter","length","find","ReactDOM","render","document","getElementById"],"mappings":"iPAGO,SAASA,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WACrBC,EAAwBF,EAAxBE,GAAIC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAMlB,OACI,mBAAGC,KAAK,IAAIC,UAAU,QAAtB,SAA8B,oBAAIA,UAAW,QAAUF,EAAWG,QAL9C,WACpBN,EAAWC,IAImB,SACzBC,M,MCPN,SAASK,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WAChC,OACE,oBAAIK,UAAU,OAAd,SACGG,EAAMC,KAAI,SAACV,GAAD,OACT,cAAC,EAAD,CAAwBA,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKE,S,UCJtBS,EAAM,gBAEL,SAASC,IACZ,MAA0BC,mBAAS,CAC/B,CAAEX,GAAI,EAAGC,KAAM,QAASC,WAAW,KADvC,mBAAOK,EAAP,KAAcK,EAAd,KAGMC,EAAcC,mBAEpBC,qBAAU,WACN,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IACjDO,GACCJ,EAASI,KAEd,IAEHD,qBAAU,WACNI,aAAaE,QAAQZ,EAAKQ,KAAKK,UAAUf,MAC1C,CAACA,IAwBJ,OACI,eAAC,WAAD,WACI,oBAAIH,UAAU,SAAd,6BACA,uBAAOA,UAAU,UAAUmB,IAAKV,EAAaW,KAAK,OAAOC,YAAY,cAAczB,GAAG,KACtF,wBAAQI,UAAU,MAAMC,QAnBV,WAClB,IAAMJ,EAAOY,EAAYa,QAAQC,MACrB,KAAT1B,IAEHW,GAAS,SAACgB,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE5B,GAAI6B,cAAU5B,OAAMC,WAAW,QAE3DW,EAAYa,QAAQC,MAAQ,OAYxB,oBACA,wBAAQvB,UAAU,MAAMC,QAVT,WACnB,IAAMyB,EAAWvB,EAAMwB,QAAO,SAACjC,GAAD,OAAWA,EAAKI,aAC9CU,EAASkB,IAQL,0BACA,sBAAK1B,UAAU,SAAf,uBAAmCG,EAAMwB,QAAO,SAACjC,GAAD,OAAWA,EAAKI,aAAW8B,OAA3E,2BACA,cAAC,EAAD,CAAUzB,MAAOA,EAAOR,WA7Bb,SAACC,GAChB,IAAM8B,EAAQ,YAAOvB,GACfT,EAAOgC,EAASG,MAAK,SAACnC,GAAD,OAAUA,EAAKE,KAAOA,KACjDF,EAAKI,WAAaJ,EAAKI,UACvBU,EAASkB,SCxBjBI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b51ec6fc.chunk.js","sourcesContent":["import React from 'react'\r\nimport './styles/TodoItem.css'\r\n\r\nexport function TodoItem( {todo, toggleTodo }) {\r\n    const { id, task, completed } = todo;\r\n\r\n    const handleTodoClick = () => {\r\n        toggleTodo(id);\r\n    }\r\n\r\n    return (\r\n        <a href=\"#\" className=\"tarea\"><li className={\"item \" + completed} onClick={handleTodoClick}>\r\n            {task}\r\n        </li></a>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {TodoItem} from './TodoItem'\r\nimport './styles/TodoList.css'\r\n\r\n\r\nexport function TodoList({ todos, toggleTodo }) {\r\n  return (\r\n    <ul className=\"list\">\r\n      {todos.map((todo) => (\r\n        <TodoItem key={todo.id} todo={todo} toggleTodo={toggleTodo} />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n","import React, { Fragment, useState, useRef, useEffect } from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {TodoList} from './components/TodoList';\r\nimport './App.css'\r\n\r\nconst KEY = \"todoApp.todos\";\r\n\r\nexport function App() {\r\n    const [todos, setTodos] = useState([\r\n        { id: 1, task: 'Tarea', completed: false },\r\n    ]);\r\n    const todoTaskRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const storedTodos = JSON.parse(localStorage.getItem(KEY))\r\n        if(storedTodos){\r\n            setTodos(storedTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(KEY, JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    const toggleTodo = (id) => {\r\n        const newTodos = [...todos];\r\n        const todo = newTodos.find((todo) => todo.id === id);\r\n        todo.completed = !todo.completed;\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const handleTodoAdd = () => {\r\n        const task = todoTaskRef.current.value;\r\n        if(task === '') return;\r\n\r\n        setTodos((prevTodos) => {\r\n            return [...prevTodos, { id: uuidv4(), task, completed: false }];\r\n        });\r\n        todoTaskRef.current.value = null;\r\n    }\r\n\r\n    const handleClearAll = () => {\r\n        const newTodos = todos.filter((todo) => !todo.completed);\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"titulo\">Lista de tareas</h1>\r\n            <input className=\"entrada\" ref={todoTaskRef} type=\"text\" placeholder=\"Nueva Tarea\" id=\"\"/>\r\n            <button className=\"btn\" onClick={handleTodoAdd}>âž•</button>\r\n            <button className=\"btn\" onClick={handleClearAll}>ðŸ—‘</button>\r\n            <div className=\"cuenta\">Te quedan {todos.filter((todo) => !todo.completed).length} tareas por completar</div>\r\n            <TodoList todos={todos} toggleTodo={toggleTodo}/>\r\n        </Fragment>\r\n            \r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}